version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: monitor-postgres
    environment:
      POSTGRES_DB: monitor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monitor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: monitor-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - monitor-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Monitor Server
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: monitor-server
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:password@postgres:5432/monitor?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ALLOWED_ORIGINS: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - monitor-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  monitor-network:
    driver: bridge
